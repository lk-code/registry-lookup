name: Build and Deploy

on:
 push:
  branches:
   - main
 workflow_dispatch:

permissions:
 contents: write
 packages: write

env:
 VERSION: "1.0.${{ github.run_number }}"
 DOTNET_VERSION: "9.0.x"
 DOCKER_IMAGE: "docker.io/lkcode/registry-lookup"
 DOCKER_PLATFORMS: "linux/amd64,linux/arm64"
 APP_SETTINGS: "./source/RegistryLookup.Backend/appsettings.json"

jobs:
 
 build-test:
  runs-on: ubuntu-latest
  
  steps:
   - name: Checkout repository
     uses: actions/checkout@v4

   - name: Setup .NET
     uses: actions/setup-dotnet@v4
     with:
      dotnet-version: ${{ env.DOTNET_VERSION }}

   - name: Restore dependencies
     run: |
      dotnet restore

   - name: Build
     run: |
      dotnet build --configuration Release --no-restore

   - name: Install Playwright
     shell: pwsh
     run: |
      ./source/RegistryLookup.Tests.System/bin/Release/net9.0/playwright.ps1 install

   - name: Test
     run: |
      dotnet test --configuration Release

   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v3

   - name: Build Docker Image
     run: |
      docker build -t test-image .

 docker-deploy:
  runs-on: ubuntu-latest
  needs:
   - build-test
  
  steps:
   - name: Checkout repository
     uses: actions/checkout@v4

   - name: Setup Docker Buildx
     uses: docker/setup-buildx-action@v3

   - name: Log in to Docker Hub
     uses: docker/login-action@v3.4.0
     with:
      username: ${{ secrets.DOCKERHUB_USERNAME }}
      password: ${{ secrets.DOCKERHUB_TOKEN }}

   - name: Extract metadata (tags, labels) for Docker
     id: meta
     uses: docker/metadata-action@v5.7.0
     with:
      images: ${{ env.DOCKER_IMAGE }}
      tags: |
       type=raw,value=${{ env.VERSION }}
       type=raw,value=latest

   - name: update Backend appsettings.json
     run: |
      sed -i "s/\"Version\": \".*\"/\"Version\": \"$VERSION\"/" ${{ env.APP_SETTINGS }}

   - name: cat Backend appsettings.json
     run: |
      cat ${{ env.APP_SETTINGS }}

   - name: Build and push Docker image
     uses: docker/build-push-action@v6.18.0
     with:
      file: ./Dockerfile
      push: true
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      platforms: ${{ env.DOCKER_PLATFORMS }}
 
 post-build:
  runs-on: ubuntu-latest
  needs:
   - build-test
   - docker-deploy
  
  steps:
   - name: Checkout repository
     uses: actions/checkout@v4.2.2

   - name: Set Version Git Tag
     run: |
      git tag ${{ env.VERSION }}
      git push origin ${{ env.VERSION }}
